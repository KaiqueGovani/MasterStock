version: "3"

services:
  # Serviço de frontend
  angular:
    container_name: angular
    build: frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    command: sh -c "npm i && ng serve --proxy-config proxy.conf.json --host 0.0.0.0 --poll 2000"

  # Serviço de backend
  node:
    container_name: node
    build: backend
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/backend
      - /backend/node_modules
    env_file:
      - .env
    command: sh -c "npm i && nest start --debug 0.0.0.0 --watch"

  # Serviço do bot de web scraping
  bot:
    container_name: bot
    build: bot
    ports:
      - "5000:5000"
    volumes:
      - ./bot/app.py:/app/app.py
      - ./bot/webScraping.py:/app/webScraping.py
      - ./bot/info.py:/app/info.py
    command: flask run --host=0.0.0.0 --debug

  # Serviço de banco de dados para dev local
  # mongo:
  #   container_name: mongo
  #   image: mongo
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - ./data:/data/db
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}

  # Serviço admin do banco de dados
  # mongo-express:
  #   container_name: mongo-express
  #   image: mongo-express
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
  #     ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASSWORD}@mongo/
  #     ME_CONFIG_BASICAUTH_USERNAME: ${ME_USER}
  #     ME_CONFIG_BASICAUTH_PASSWORD: ${ME_PASSWORD}
  #     ME_CONFIG_SITE_SSL_ENABLED: true

  # grafana:
  #  image: grafana/grafana-enterprise
  #  container_name: grafana
  #  restart: unless-stopped
  #  ports:
  #  - '8080:8080'
  #  networks:
  #    - MasterStock
  #  volumes:
  #    - .:/usr/app
